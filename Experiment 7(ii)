#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node* next;
};
struct Node* top = NULL;
void push(int item) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = item;
    newNode->next = top;
    top = newNode;
}

int pop() {
    if (top == NULL) {
        printf("Stack Underflow\n");
        return -1;
    }
    
    struct Node* temp = top;
    int item = temp->data;
    top = top->next;
    free(temp);
    return item;
}

int peek() {
    if (top == NULL) {
        printf("Stack is empty\n");
        return -1;
    }
    
    return top->data;
}

int isEmpty() {
    return top == NULL;
}

int main() {
    int choice, item;
    
    while (1) {
        printf("MENU \n");
        printf("1. Push\n");
        printf("2. Pop\n");
        printf("3. Peek\n");
        printf("4. Check if stack is empty\n");
        printf("5. Exit\n");
        printf("Enter your choice: \n");
        scanf("%d", &choice);
        
        switch (choice) {
            case 1:
                printf("Enter the element to push: \n");
                scanf("%d", &item);
                push(item);
                break;
            case 2:
                item = pop();
                if (item != -1) {
                    printf("Popped element: %d\n", item);
                }
                break;
            case 3:
                item = peek();
                if (item != -1) {
                    printf("Top element: %d\n", item);
                }
                break;
            case 4:
                printf("Is stack empty? %s\n", isEmpty() ? "Yes" : "No");
                break;
            case 5:
                printf("Exiting...\n");
                return 0;
            default:
                printf("Invalid choice\n");
        }
        
        printf("\n");
    }
}
